
spring.datasource.url=jdbc:mysql://localhost:3306/predictor-period-ovulation
spring.datasource.username=root
spring.datasource.password=1234
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=https://www.googleapis.com/auth/calendar.events,https://www.googleapis.com/auth/calendar.addons.execute,https://www.googleapis.com/auth/calendar.readonly,https://www.googleapis.com/auth/userinfo.email,https://www.googleapis.com/auth/userinfo.profile

spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
logging.level.org.hibernate.SQL=DEBUG

##connectionpool
# HikariCP settings (Connection pooling in spring)
spring.datasource.hikari.maximum-pool-size=10
# how many connections can wait when they are not busy
spring.datasource.hikari.minimum-idle=10
# how long a connection is allowed to sit (not busy) idle in the pool (0.5 minute)
spring.datasource.hikari.idle-timeout=30000
#  maximum lifetime of a connection in the pool (1 minute)
spring.datasource.hikari.max-lifetime=60000
# will wait for a connection from the pool before it times out and throws an
# exception if no connections are available.
spring.datasource.hikari.connection-timeout=20000
# Name of the connection pool (useful for debugging/logging)
spring.datasource.hikari.pool-name=predictor-period-ovulation
# Enable graceful shutdown (waits for active tasks to finish before shutting down)
server.shutdown=graceful

adminEmail="admin@admin.com"
adminPassword="admin"